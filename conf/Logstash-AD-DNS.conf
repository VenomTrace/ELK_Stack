input {
  beats {
    port => 5045
  }
}

filter {
  grok {
    match => {
      "message" => "%{MONTHNUM:month}/%{MONTHDAY:day}/%{YEAR:year} %{TIME:log_time} %{WORD:Time_Form} %{WORD:thread_id} %{WORD:packet_type}  %{NOTSPACE:packet_id} %{WORD:protocol} %{WORD:action} %{IP:client_ip} +%{WORD:port} +%{GREEDYDATA:Response_Query} \[%{NUMBER:FlagNumber}\s+(%{WORD:Authoritative_Answer})?\s+(%{WORD:Recursion_Desired})?\s+(%{WORD:Truncated_Response})?\s+(%{WORD:Error_Check}\s*)?\] %{WORD:Record_Type} +%{GREEDYDATA:url}"
    }
  }

  # Transform query_name into a readable domain
  ruby {
    code => "
      if event.get('url') && !event.get('url').empty?
        url = event.get('url')
        url = url.gsub(/\(\d+\)/, '.')
        url = url.sub(/\.$/, '')
        url = url.sub(/^./, '')
        event.set('url', url)
      end
    "
  }

  geoip {
    source => "client_ip"  # Field to perform the GeoIP lookup on
    target => "location"   # Target field to store the GeoIP information
  }

  # Optionally, create a timestamp field by combining log_date and log_time
  date {
    match => ["log_date log_time", "MM/dd/yyyy hh:mm:ss a"]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["http://10.10.10.16:9200"]
    index => "venom-dns-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}
